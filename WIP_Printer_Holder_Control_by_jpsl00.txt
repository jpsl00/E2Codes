@name WIP Printer Holder Control by jpsl00
@inputs EGP:wirelink User:entity 
@outputs 
@persist User:entity Cursor:vector2 A B C [State,X,Color]:array String:string
@autoupdate on

function void egpDraw(){
    EGP:egpClear()
    EGP:egpResolution(vec2(0,0),vec2(512,512))
    EGP:egpDrawTopLeft(1)
    
    EGP:egpBox(1,vec2(0),vec2(512,512))
    EGP:egpColor(1,vec(100)) #Background
    
    EGP:egpRoundedBox(2,vec2(0),vec2(512,100))
    EGP:egpColor(2,vec(140)) #Main
    
    for(I = 1,4){ #Button + Button text generator
        #Button
        EGP:egpRoundedBox(I+2,vec2(0,I*101),vec2(255,100))
        EGP:egpColor(I+2,vec(200))
    
        #Text
        EGP:egpTextLayout(I+49,toString(I),vec2(-118,-40),vec2(235,80))
        EGP:egpAlign(I+49,1,1)
        EGP:egpColor(I+49,vec())
        EGP:egpAlpha(I+49,100)
        EGP:egpParent(I+49,I+2)
        
        #print(I)
    }
    
    EGP:egpRoundedBox(98,vec2(256,101),vec2(256,404))
    EGP:egpColor(98,vec(240)) #Info-Screen 

    #EGP:egpCircle(150,vec2(-10,-10),vec2(3,3))
    #EGP:egpColor(150,vec(0))
    #EGP:egpParentToCursor(150)
     
    #print(EGP:egp)
}

function number button(Num){
    return inrange(Cursor,EGP:egpPos(Num),EGP:egpPos(Num) + EGP:egpSize(Num)) #Function for buttons.
}

###############################
# Execution starts below line #
###############################

if(changed(EGP)){
    egpDraw()
}
Cursor = EGP:egpCursor(User)
